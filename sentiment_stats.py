
#! /usr/bin/env python
# -*- coding: utf-8 -*-

import json
from pymongo import MongoClient

client = MongoClient('localhost', 27017)
'''
    database : main_db
'''
db = client.main_db
db_batch = client.batch_db

topic = ["politic_sentiment", "tourism_sentiment", "economy_sentiment", \
        "religion_sentiment"]

# Set i according to above topic in which you are performing
# operation in segregate_country module!
i = 0
'''
    Single json data consists of all coutries stats (pos, neg, ntrl)
    Function iterate over data base contains all tweets with country
    identified and resolved using Map API (ie, Google Map V3, Yandex)
    and cluster same country tweets.
'''
def segregate_country():
    print "::", topic[i] ,  "::"
    '''
        Set the db and Collection for fetching and processing
        Data.!! Uncomment and set parameter in next line.
    '''
    #result = db.religion_sentiment.find({}, {"_id" : False})
    country_data = {}
    cnt = 0
    for twt in result:
        cnt += 1
        if("place" in twt):
            if("country" in twt["place"]):
                place = twt["place"]["country"]
                #add key if not exist
                if(place not in country_data):
                    country_data[place] = {}
                    country_data[place]["positive"] = 0
                    country_data[place]["negative"] = 0
                    country_data[place]["neutral"] = 0
                #check value of tweet
                if(twt["polarity"] >= 0.20):
                    country_data[place]["positive"] += 1
                elif(twt["polarity"] <= -0.10):
                    country_data[place]["negative"] += 1
                else:
                    country_data[place]["neutral"] += 1
            else:
                pass
        else:
            pass
    #Writing to file
    with open("rel_country.json", "w") as fw:
        json.dump(country_data, fw)
    '''
        Save the Statistics in Collection::
    '''
    #db.politic_country.insert(country_data)
    print "Inserted Segregated Country Data!!"

'''
    Module to add pos, neg, ntrl tweets value and remove country
    [not recognized by UN] ie, dont have iso2c code assigned.
    This json format is generated by above Function.
    {
        "Country_name" : {
            "positive" : some_value,
            "negative" : some_value,
            "neutral" : some_value,
            "iso2c" : "2_letter_iso2c_code_of_country"
            "lat" : lattitude_value,
            "lng" : longitude_value,
        },
        {
        ..............
        }
        .......all countries.....
    }
'''
def final_stats():
    #alias define
    ps = "positive"
    ng = "negative"
    nt = "neutral"
    tot = "all"
    iso = "iso2c"

    #Final crushing of politic
    result = db_batch.politic_country.find({}, {'_id' : False})
    for r in result:
        final = r.copy()
        for c,v in r.iteritems():
            if(c in final):
                if(iso in v):
                    final[c][tot] = final[c][ps] + final[c][ng] + final[c][nt]
                else:
                    del final[c]
        db_batch.politic_final.insert(final)
    print "Politic Passed!"

    #Final crushing of Tourism
    result = db_batch.tourism_country.find({}, {'_id' : False})
    for r in result:
        final = r.copy()
        for c,v in r.iteritems():
            if(iso in v):
                final[c][tot] = final[c][ps] + final[c][ng] + final[c][nt]
            else:
                del final[c]
        db_batch.tourism_final.insert(final)
    print "Tourism Passed!"

    #Final Crushing of economy
    result = db_batch.economy_country.find({}, {'_id' : False})
    for r in result:
        final = r.copy()
        for c,v in r.iteritems():
            if(iso in v):
                final[c][tot] = final[c][ps] + final[c][ng] + final[c][nt]
            else:
                del final[c]
        db_batch.economy_final.insert(final)
    print "Economy Passed!!"

    #Final Crushing of Religion
    result = db_batch.religion_country.find({}, {'_id' : False})
    for r in result:
        final = r.copy()
        for c,v in r.iteritems():
            if(iso in v):
                final[c][tot] = final[c][ps] + final[c][ng] + final[c][nt]
            else:
                del final[c]
        db_batch.religion_final.insert(final)
    print "Religion Passed!!"


if __name__ == "__main__":
    '''
        Uncomment below module accordingly!
    '''
    #segregate_country()
    #final_stats()
    print "Stats Complete!!"
